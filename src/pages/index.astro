---
import Layout from "../layouts/Layout.astro";
import { Clases } from "../data/ds3_classes";
---

<Layout title="Creador de personaje">
  <div class="flex flex-1 flex-col w-full h-full">
    <header class="flex gap-2 align-middle p-4 bg-gray-950 text-white">
      <svg
        class="w-10 h-10 text-white"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 20 18"
      >
        <path
          d="M6.5 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9Zm-1.391 7.361.707-3.535a3 3 0 0 1 .82-1.533L7.929 10H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h4.259a2.975 2.975 0 0 1-.15-1.639ZM8.05 17.95a1 1 0 0 1-.981-1.2l.708-3.536a1 1 0 0 1 .274-.511l6.363-6.364a3.007 3.007 0 0 1 4.243 0 3.007 3.007 0 0 1 0 4.243l-6.365 6.363a1 1 0 0 1-.511.274l-3.536.708a1.07 1.07 0 0 1-.195.023Z"
        ></path>
      </svg>
      <h1 class="text-4xl">Crear personaje</h1>
    </header>
    <main class="grid grid-cols-4 bg-gray-700 h-full">
      <form class="p-4 col-span-2" onsubmit="crearPersonaje(e)">
        <h1 class="text-3xl text-gray-200">Información</h1>
        <div>
          <label
            for="first_name"
            class="text-right block mb-2 text-xl font-medium text-gray-200 dark:text-white"
            >Nombre</label
          >
          <input
            type="text"
            placeholder="Jose Luis"
            id="first_name"
            class="mb-3 bg-gray-50 border border-gray-300 text-gray-900 text-xl rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            required
          />
        </div>
        <div>
          <label
            for="sexos"
            class="text-right block mb-2 text-xl font-medium text-gray-200 dark:text-white"
            >Sexo</label
          >
          <select
            id="sexos"
            class="mb-3 bg-gray-50 border border-gray-300 text-gray-900 text-xl rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          >
            <option value="M">Masculino</option>
            <option value="F">Femenino</option>
          </select>
        </div>
        <div>
          <label
            for="age"
            class="text-right block mb-2 text-xl font-medium text-gray-200 dark:text-white"
            >Edad</label
          >
          <input
            type="number"
            id="age"
            placeholder="0"
            min="1"
            pattern="^[0-9]+"
            class="mb-3 bg-gray-50 border border-gray-300 text-gray-900 text-xl rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            required
          />
        </div>
        <div>
          <label
            for="clases"
            class="text-right block mb-2 text-xl font-medium text-gray-200 dark:text-white"
            >Clase</label
          >
          <select
            id="clases"
            class="bg-gray-50 border border-gray-300 text-gray-900 mb-5 text-xl rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          >
            {
              Clases.map((clase) => {
                return (
                  <option
                    value={clase.nombre}
                    id={clase.id.toString()}
                    class="capitalize"
                  >
                    {clase.nombre.replace(/^\w/, (c) => c.toUpperCase())}
                  </option>
                );
              })
            }
          </select>
        </div>
        <button
          type="submit"
          class="text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-5 w-full py-2.5 mt-5 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700"
          >
            <span class="text-xl">Crear</span>
          </button
        >
      </form>

      <div class="bg-gray-800 flex flex-col gap-10" style="align-items: center;">
        <h1 class="text-3xl text-center text-gray-200 mt-5">Atributos</h1>
        <table
          id="atributos"
          class="text-gray-200 text-center text-2xl w-60"
        >
        </table>
      </div>

      <div class="bg-gray-900 flex flex-col gap-5" id="prev_container">
        <h1 id="title" class="text-gray-200 text-3xl text-center capitalize mt-5">
          Caballero
        </h1>
        <img
          src="../../public/assets/classes/caballero.png"
          alt=""
          id="preview_image"
        />
      </div>
    </main>
  </div>
</Layout>

<style>
  form {
    width: 80%;
    display: block;
    margin: 1.25rem auto;
  }
  select,
  option {
    cursor: pointer;
  }
  #preview_image {
    width: 25rem;
    aspect-ratio: 250/380;
  }
  #prev_container {
    align-items: center;
  }
  table {
    height: 70%;
  }
</style>

<script>
  import { Clases } from "../data/ds3_classes";

  const name = document.querySelector('.name');
  const age = document.querySelector('.age');
  const btn = document.querySelector('.alert');
  const form = document.getElementsByTagName('form');

  function crearPersonaje(e: Event) {
    e.preventDefault();
    alert('Personaje creado con éxito.');
  }

  document.addEventListener("DOMContentLoaded", function () {
    const title = document.getElementById("title");
    const select = document.getElementById("clases");
    const imagen = document.getElementById("preview_image");
    const atributos = document.getElementById("atributos");

    for (let att in Clases[0]) {
      if (att !== "id" && att !== "nombre") {
        let tr = document.createElement("tr");
        let tdicon = document.createElement("td");
        let icon = document.createElement("img");
        icon.className = "w-10";
        icon.setAttribute("src", `../../assets/attributes/${att}.jpg`);
        tdicon.append(icon);
        let td1 = document.createElement("td");
        td1.textContent = `${att}`;
        let td2 = document.createElement("td");
        td2.textContent = `${Clases[0][att]}`;

        tr.append(tdicon);
        tr.append(td1);
        tr.append(td2);
        atributos.append(tr);
      }
    }

    // Agregar un evento al cambio del select
    select?.addEventListener("change", function () {
      const valorSeleccionado = select.value;
      title.textContent = valorSeleccionado;
      imagen.setAttribute(
        "src",
        `../../public/assets/classes/${valorSeleccionado}.png`
      );

      atributos.innerHTML = "";

      for (let clase of Clases) {
        if (clase.nombre == valorSeleccionado) {
          for (let att in clase) {
            if (att !== "id" && att !== "nombre") {
              let tr = document.createElement("tr");
              let tdicon = document.createElement("td");
              let icon = document.createElement("img");
              icon.setAttribute("src", `../../assets/attributes/${att}.jpg`);
              icon.className = "w-10";
              tdicon.append(icon);
              let td1 = document.createElement("td");
              td1.textContent = `${att}`;
              let td2 = document.createElement("td");
              td2.textContent = `${clase[att]}`;

              tr.append(tdicon);
              tr.append(td1);
              tr.append(td2);
              atributos.append(tr);
            }
          }
        }
      }
    });
  });
</script>
